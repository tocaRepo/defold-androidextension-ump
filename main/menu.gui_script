function init(self)
    msg.post(".", "acquire_input_focus")

end

local function set_text(text)
    gui.set_text(gui.get_node("text1"), "Android says: \n" .. text)
end

local function set_text_consent(text)
    gui.set_text(gui.get_node("consent"), "UMP says: \n" .. text)
    

end

function on_input(self, action_id, action)
    if action.pressed and  action_id == hash("touch") and ump ~= nil then
        if gui.pick_node(gui.get_node("bn_java"), action.x, action.y) then
            -- Implementing the UMP flow
            -- Step 1: Request Consent Info Update
            set_text("Requesting Consent Info...")
            local test_device = true -- Set to false for production
            local test_device_id = "YOUR_TEST_DEVICE_HASH_ID" -- Replace with actual test device ID

            print("Test device: " .. tostring(test_device) .. ", Test device ID: " .. test_device_id) -- Log device info
            ump.request_consent_info_update(test_device, test_device_id)

           
            -- Step 2: After consent info update, check if privacy options are required
            -- if ump.is_privacy_options_required() then
            --     print("PRIVACY OPTIONS INIT")
            --     set_text("Privacy options are required, showing form...")
            --     ump.show_privacy_options_form()
            --     print("PRIVACY OPTIONS CALLED")
            -- end
            if ump.can_request_ads() then
                    set_text("Ads can be requested now.")
            else
                    set_text("Ads cannot be requested yet.")
            end

            local consent_status = ump.get_consent_status()

            if consent_status == 0 then
                 set_text("Consent status unknown. Consent info update required.")
            elseif consent_status == 1 then
                 set_text("Consent not required. Ads can be shown.")
            elseif consent_status == 2 then
                 set_text("Consent required but not yet obtained.")
            elseif consent_status == 3 then
                 set_text("User consent obtained. Ads can be shown.")
            else
                 set_text("Invalid consent status.")
            end

           

        elseif gui.pick_node(gui.get_node("bn_permission"), action.x, action.y) then
            -- Button to trigger the "Edit Permissions" form
            set_text("Reset consent...")
            ump.reset_consent_information() -- Shows the privacy options form
            print("show_privacy_options_form done")
        end
        
    end
end
